<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Keep Learning</title>
    <link>https://hanyutan.github.io/nt/</link>
    <description>Recent content on Keep Learning</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Mon, 29 Jul 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://hanyutan.github.io/nt/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Build Blog</title>
      <link>https://hanyutan.github.io/nt/build_blog/</link>
      <pubDate>Mon, 29 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>https://hanyutan.github.io/nt/build_blog/</guid>
      <description>Introduction 如果你不会Web前端开发，也不愿意花钱买服务器，懒洋洋地做个伸手党，只希望专注于内容创作&amp;hellip;&amp;hellip; 那么Github Pages + Hugo绝对适合你！
Why Github Pages? 免费！创建和管理都很方便！
只需在Github上创建一个repository，然后将Hugo生成的静态页面相关文件push到项目上。 （个人主页&amp;lt;username&amp;gt;.github.io的话push到默认的master分支上，普通repository则push到该项目的gh-pages分支上并保证根目录有一个index.html文件）
Push的方法有多种，说一些我接触到的：
 使用Git命令（最原始，最基本，灵活度高） 下载GitHub桌面版，2次按键搞定（最简单，灵活度低） 基于Git使用sublime上传 Eclipse里自带Git，但需要Java环境，jre或jdk都行。  Why Hugo? 目前流行的几个静态网站生成器（SSG——Static Site Generator）：Hugo/Hexo/Jekyll。
Hugo官方主页：https://gohugo.io
 Hugo是使用Go语言编写的静态网站生成器。 相对于Jekyll复杂的安装设置来说，Hugo进行需要下载一个二进制文件（hogo.exe）即可轻松调试和生成静态页面。 Hugo生成静态页码的效率很高，速度上来说Hugo&amp;gt;Hexo&amp;gt;Jekyll。 Hugo自带watch的调试模式，可以在修改Markdown的文章内容的同时，自动更新浏览器页面呈现最终效果。 缺点是主题模板相对其他两个来说数量比较少。 用的人感觉还不算特别多，中文社区支持也不是很多。  Preparation 需要拥有自己的GitHub账号、创建个人主页用的仓库、安装Git和Hugo、一定的Markdown和HTML基础。 GitHub Desktop和Go语言可以根据自身需要选择性地安装。 另外最好还要有一款支持语法高亮的文本编辑器/代码编辑器，例如Sublime Text、Notepad++等等。
GitHub Account &amp;amp; Repository 进入GitHub官方主页https://github.com/注册自己的GitHub账户，登陆个人主页http://github.com/username， 右上角点击+号新建仓库（New Repository），在Repository name一栏中为仓库命名为&amp;lt;username&amp;gt;.github.io。 注意username需要与注册时保持一致。Initialize this repository with a README先不用勾选。
Install Git &amp;amp; Hugo Install Git Git下载安装网站：https://git-scm.com/download
安装完成后，在开始菜单里找到Git -&amp;gt; Git Bash，蹦出一个命令行窗口说明Git安装成功。
 Git Bash命令行输入
 git config --global user.</description>
    </item>
    
    <item>
      <title>Git Notes</title>
      <link>https://hanyutan.github.io/nt/git_notes/</link>
      <pubDate>Mon, 29 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>https://hanyutan.github.io/nt/git_notes/</guid>
      <description>Git Notes Git的用途和优点自行Google。这里安利一些学习资料，本Notes主要来自于廖雪峰的Git教程：
 Git的官方网站：http://git-scm.com 廖雪峰的Git教程：https://www.liaoxuefeng.com/wiki/896043488029600 Git的cheat sheet：https://gitee.com/liaoxuefeng/learn-java/raw/master/teach/git-cheatsheet.pdf  Cheat Sheet    Git Cheat Sheet      git initcreate a new local respository    git clone git@github.com:user/repo.gitclone an existing repository use SSH    git clone https://github.com/user/repo.gitclone &amp;hellip;&amp;hellip; use HTTPS    git statusstatus of your working directory    git diffchanges to tracked files    git add readme.</description>
    </item>
    
    <item>
      <title>Hugo Notes</title>
      <link>https://hanyutan.github.io/nt/hugo_notes/</link>
      <pubDate>Mon, 29 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>https://hanyutan.github.io/nt/hugo_notes/</guid>
      <description>Hugo Notes Hugo官方教程：https://gohugo.io/getting-started/
有人自己创建的Hugo中文文档：https://www.gohugo.org/
Hugo主题模板：https://themes.gohugo.io/
hugo new site Hugo_Blog
然后hugo会自动生成这样一个目录结构（大致样子）：
   文件(夹)名 用途     archetypes 为不同类型定义默认的头文件FrontMatter，一般用不上   content 存放写好的文章，markdown文件   data 数据文件，一般用不上   layouts 存放网站的模板文件   static 存放image/css/js等静态资源   themes 存放下载的Hugo主题   config.toml 网站的配置文件    hugo new指令会自动添加content路径前缀 themes/ananke/exampleSite是一个示例站点，我们可以直接拿来使用。
修改FrontMatter
&amp;ndash;watch或者-w 选项打开的话，将会监控到文章的改动从而自动刷新浏览器。
浏览器里打开：http://localhost:1313
hugo
所有静态页面会生成到public目录，将public文件夹里的全部文件push到对应的分支上。（例如&amp;lt;username&amp;gt;.github.io的master分支上，或者其他项目repository的gh-pages上）
在浏览器中输入https://&amp;lt;username&amp;gt;.github.io查看个人主页，或者https://&amp;lt;username&amp;gt;.github.io/repository_name查看项目主页。</description>
    </item>
    
    <item>
      <title>Markdown Notes</title>
      <link>https://hanyutan.github.io/nt/markdown_notes/</link>
      <pubDate>Mon, 29 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>https://hanyutan.github.io/nt/markdown_notes/</guid>
      <description>Markdown Notes 作为示例，右边栏code即本文的markdown内容。 此外在markdown里使用html tag同样有效。 空一行可以形成单独段落。 作为示例，右边栏code即本文的markdown内容。
此外在markdown里使用html tag同样有效。
空一行可以形成单独段落。
Headers ## Headers 三级标题 ### 三级标题 在想要设置为标题的文字前面加#号和空格来表示，#号的数量代表几级标题。标准语法一般在#后面跟个空格再写文字。 &amp;lt;aside class=&amp;#34;notice&amp;#34;&amp;gt;补充内容可以设置加下划线的标题形式，这里不作展示。&amp;lt;/aside&amp;gt; Alt-title1 ====== Alt-H2 ------ 在想要设置为标题的文字前面加#号和空格来表示，#号的数量代表几级标题。标准语法一般在#后面跟个空格再写文字。
补充内容可以设置加下划线的标题形式，这里不作展示。 Emphasis 要**加粗**的文字左右两边使用2个星号`*`括起来 要&amp;lt;em&amp;gt;倾斜&amp;lt;/em&amp;gt;的文字左右两边使用1个星号`*`或者`&amp;lt;em&amp;gt;&amp;lt;/em&amp;gt;`括起来 要***加粗和倾斜***的文字左右两边使用3个星号`*`括起来 要~~加删除线~~的文字左右两边使用2个波浪号`~`括起来 &amp;lt;aside class=&amp;#34;warning&amp;#34;&amp;gt;在这里使用星号*设置倾斜似乎无效&amp;lt;/aside&amp;gt; 要加粗的文字左右两边使用2个星号*括起来
要倾斜的文字左右两边使用1个星号*或者&amp;lt;em&amp;gt;&amp;lt;/em&amp;gt;括起来
要加粗和倾斜的文字左右两边使用3个星号*括起来
要加删除线的文字左右两边使用2个波浪号~括起来
在这里使用星号*设置倾斜似乎无效 Lists 无序列表使用-+*中的任意一种作为开头，空一格后输入内容。 - 列表内容 + 列表内容 * 列表内容 有序列表需要使用数字+点作为开头，空一格后输入内容。 1. 列表内容 2. 列表内容 3. 列表内容 列表嵌套需要在行前再空1个tab或者1个空格（空格数量不一定）。 1. 列表内容 - 列表内容 2. 列表内容 无序列表使用-+*中的任意一种作为开头，空一格后输入内容。
 列表内容 列表内容 列表内容  有序列表需要使用数字+点作为开头，空一格后输入内容。
 列表内容 列表内容 列表内容  列表嵌套需要在行前再空1个tab或者1个空格（空格数量不一定）。</description>
    </item>
    
    <item>
      <title>Questions and Answers</title>
      <link>https://hanyutan.github.io/nt/questions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://hanyutan.github.io/nt/questions/</guid>
      <description>Q&amp;amp;A 1.如何在 Github Pages 中输入数学公式？ &amp;lt;script type=&amp;#34;text/javascript&amp;#34; src=&amp;#34;http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML&amp;#34;&amp;gt; &amp;lt;/script&amp;gt; # markdown内容 使用2个dollar符号括起来可以让公式单独显示一行$$\prod(1+1)$$ 写作markdown文件时发现用$$标记的公式内容无法在网页上正常解析成数学公式，只能显示原有内容。 解决办法：使用 Mathjax 渲染数学公式。 需要找到你使用的Hugo Themes文件夹里的&amp;lt;your site&amp;gt;\themes\&amp;lt;theme name&amp;gt;\layouts\_default\baseof.html文件， 打开后在&amp;lt;head&amp;gt;里加入右侧代码。
使用2个dollar符号括起来可以让公式单独显示一行$$\prod(1+1)$$
2.如何开启双语界面？ # 原有内容，说明网站现在是英文的 [languages.en] languageCode = &amp;#34;en-us&amp;#34; # 在其后面添加中文 [languages.zh] languageCode = &amp;#34;zh-cn&amp;#34; # 回到config.toml开头修改默认语言 defaultContentLanguage = &amp;#34;zh&amp;#34; defaultContentLanguageInSubdir = true 解决办法：在config.toml文件里找到[languages]部分，按照右侧代码修改。 然后在&amp;lt;your site&amp;gt;\themes\&amp;lt;theme name&amp;gt;\i18n中保留en.yaml和zh.yaml文件，并把其中翻译不当的地方修改一下。 之后新增博客时如果要增加英文版本，只需在文件扩展名前加.en即可。例如中文版本的为my_post.md，那么英文版本为my_post.en.md。
3.Win10如何设置环境变量？ 解决办法：控制面板————系统和安全————系统————高级系统设置————环境变量
4.如何让我的github.io被Google/Bing/Baidu搜索到？ 在Google搜索页面中输入`site:.github.io`发现这个网页无法被Google索引到。 解决办法：
 Google: 根据搜索结果页面的提示，使用Google Search Console （需要拥有Google账户）， 选择资源类型————网址前缀，输入完整的urlhttps://&amp;lt;username&amp;gt;.github.io，下载HTML验证文件上传到github.io的repository中，等待官方验证通过即可。 Bing: Baidu:在百度站点管理 进行注册，貌似还需要与熊掌ID关联之后才可实用功能， 总之流程相对有点繁琐，最后也是可以选择下载一个验证文件push到github.io上。 详情请参考这篇文章  5.如何对我的github.io进行网站数据统计与分析？ 解决办法：
 百度统计：注册并登陆百度统计 ，添加网站后， 在左边栏的代码管理————代码获取中复制&amp;lt;script&amp;gt;.</description>
    </item>
    
  </channel>
</rss>