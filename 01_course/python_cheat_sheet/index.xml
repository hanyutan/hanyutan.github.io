<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Python Cheat Sheet on Keep Learning</title>
    <link>https://hanyutan.gitee.io/01_course/python_cheat_sheet/</link>
    <description>Recent content in Python Cheat Sheet on Keep Learning</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 19 Oct 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://hanyutan.gitee.io/01_course/python_cheat_sheet/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Basic</title>
      <link>https://hanyutan.gitee.io/01_course/python_cheat_sheet/basic/</link>
      <pubDate>Sat, 19 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://hanyutan.gitee.io/01_course/python_cheat_sheet/basic/</guid>
      <description>List list.index(max(k)) # index返回值的索引 for i,element in enumerate(list): print(i,element) # enumerate枚举 String print(&amp;#34;Test set accuracy score: {:.5f}&amp;#34;.format(accuracy_score(y_pred, y_test))) &amp;#39;K = %s, Silhouette Coefficient = %.3f&amp;#39; % ( k, metrics.silhouette_score(X_train, y_train_hat ,metric=&amp;#39;euclidean&amp;#39;))</description>
    </item>
    
    <item>
      <title>Pandas</title>
      <link>https://hanyutan.gitee.io/01_course/python_cheat_sheet/pandas/</link>
      <pubDate>Sat, 19 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://hanyutan.gitee.io/01_course/python_cheat_sheet/pandas/</guid>
      <description>import pandas as pd Attribute df.head() df.shape df.dtypes.index([df.dtypes==&amp;#34;object&amp;#34;]) # 筛选出属性变量 df.dtypes.index([df.dtypes!=&amp;#34;object&amp;#34;]) # 筛选出数值变量 Slice/Filter df.loc[0:2] # 0 1 2行 df.iloc[0:2] # 0 1行 df.iloc[0:2,0:2] # 0 1行 0 1列 df[(condition)&amp;amp;(condition)&amp;amp;...] df.drop([&amp;#34;var&amp;#34;,&amp;#34;var&amp;#34;],axis=1) Apply/Map # 对行数据计算生成新变量 df[&amp;#34;volumn&amp;#34;] = df.apply(lambda x: x[&amp;#34;x&amp;#34;]*x[&amp;#34;y&amp;#34;]*x[&amp;#34;z&amp;#34;],axis=1) # 属性值替</description>
    </item>
    
    <item>
      <title>Plot</title>
      <link>https://hanyutan.gitee.io/01_course/python_cheat_sheet/plot/</link>
      <pubDate>Wed, 23 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://hanyutan.gitee.io/01_course/python_cheat_sheet/plot/</guid>
      <description>matplotlib 数学绘图库 可视化工具 参数较复杂 seaborn 在matplotlib的基础上进行更高级的API封装 官网 yellowbrick pyecharts 用于生成Echarts图表的类库 官方教程 link import matplotlib.pyplot</description>
    </item>
    
    <item>
      <title>Numpy</title>
      <link>https://hanyutan.gitee.io/01_course/python_cheat_sheet/numpy/</link>
      <pubDate>Sat, 19 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://hanyutan.gitee.io/01_course/python_cheat_sheet/numpy/</guid>
      <description>import numpy as np Random np.random.seed(123) np.random.randn(m,n) # 标准正态分布随机数 np.random.shuffle(array) # 打乱数据，改变原值 Array np.arange(n) # 0~n-1的数组 np.array(range(10)) # 0~n-1的数组 np.ones((m,n)) # 全是1的数组 np.where(array == np.max(array)) # 返回值的索引</description>
    </item>
    
    <item>
      <title>Data Pre-processing</title>
      <link>https://hanyutan.gitee.io/01_course/python_cheat_sheet/data_preprocessing/</link>
      <pubDate>Sat, 19 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://hanyutan.gitee.io/01_course/python_cheat_sheet/data_preprocessing/</guid>
      <description>Miss Rate # define function to calculate missing rate def miss_rate(df): columns = df.columns n = df.shape[0] rates = [] for col in columns: rate = round(sum(df[col].isnull())/n*100,3) rates.append(rate) miss_df = pd.DataFrame({&amp;#34;Column_Name&amp;#34;:columns,&amp;#34;Miss_Rate&amp;#34;:rates}) miss_df = miss_df[miss_df[&amp;#34;Miss_Rate&amp;#34;]&amp;gt;0] miss_df = miss_df.sort_values(by=&amp;#34;Miss_Rate&amp;#34;,ascending=False) return(miss_df) # fill missing value df.fillna(&amp;#34;Unknown&amp;#34;,inplace=True) scaling variables from sklearn import preprocessing for col in df.columns: df[col] = preprocessing.scale(df[col]) Split dataset from sklearn.model_selection import train_test_split X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.</description>
    </item>
    
  </channel>
</rss>